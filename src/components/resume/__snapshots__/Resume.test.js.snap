// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Resume renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Resume />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="row blue-grey-text text-darken-1"
          id="title"
        >
          <h3>
            Resume
          </h3>
        </div>,
        <div
          className="row"
        >
          <div
            className="col s12 center"
          >
            <embed
              class="resume"
              src="Justin_M_Gerow_-_Resume_v2_web.pdf"
            />
          </div>
        </div>,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            Resume
          </h3>,
          "className": "row blue-grey-text text-darken-1",
          "id": "title",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Resume",
          },
          "ref": null,
          "rendered": "Resume",
          "type": "h3",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="col s12 center"
          >
            <embed
              class="resume"
              src="Justin_M_Gerow_-_Resume_v2_web.pdf"
            />
          </div>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <embed
              class="resume"
              src="Justin_M_Gerow_-_Resume_v2_web.pdf"
            />,
            "className": "col s12 center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "class": "resume",
              "src": "Justin_M_Gerow_-_Resume_v2_web.pdf",
            },
            "ref": null,
            "rendered": null,
            "type": "embed",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="row blue-grey-text text-darken-1"
            id="title"
          >
            <h3>
              Resume
            </h3>
          </div>,
          <div
            className="row"
          >
            <div
              className="col s12 center"
            >
              <embed
                class="resume"
                src="Justin_M_Gerow_-_Resume_v2_web.pdf"
              />
            </div>
          </div>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              Resume
            </h3>,
            "className": "row blue-grey-text text-darken-1",
            "id": "title",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Resume",
            },
            "ref": null,
            "rendered": "Resume",
            "type": "h3",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col s12 center"
            >
              <embed
                class="resume"
                src="Justin_M_Gerow_-_Resume_v2_web.pdf"
              />
            </div>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <embed
                class="resume"
                src="Justin_M_Gerow_-_Resume_v2_web.pdf"
              />,
              "className": "col s12 center",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "class": "resume",
                "src": "Justin_M_Gerow_-_Resume_v2_web.pdf",
              },
              "ref": null,
              "rendered": null,
              "type": "embed",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
